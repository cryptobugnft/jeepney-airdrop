{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["window","$","CONFIG","ABI","account","defSymbol","walletBalanceAPI","scannerAPI","web3","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleWindowSizeChange","setState","width","innerWidth","state","addEventListener","removeEventListener","_connectwallet","asyncToGenerator","_regeneratorRuntime","mark","_callee","configResponse","accounts","networkId","abiResponse","sWallBal","wrap","_context","prev","next","ethereum","fetch","headers","Content-Type","Accept","sent","json","Web3","send","eth","getAccounts","request","method","MAINNET","ID","TESTNET","SYMBOL","API","BALANCE","WALLET","ABIFetch","STAKING","MAINDAPP","TESTDAPP","document","getElementById","style","WalletBalance","innerHTML","APICall","confirm","t0","console","log","stop","apply","arguments","_x","_x2","_APICall","_callee2","theURL","apiResponse","jsonParsedContents","_context2","abrupt","_x3","_WalletBalance","_callee3","_account","earnedrwd","rewards","_context3","replace","utils","fromWei","result","Number","toFixed","_x4","_x5","_x6","_ABIFetch","_callee4","_abi","_address","_contract","ABIResponse","ABIJSON","_context4","Contract","_Airdrop","_callee5","txt","nft","addy","airdropAddress","airdropContract","jeepneyContract","_context5","value","String","split","methods","isApprovedForAll","setApprovalForAll","from","InitiateAirdrop","react_default","a","createElement","className","class","fontFamily","fontWeight","fontSize","href","src","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","name","placeholder","rows","cols","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"k2NAOUA,OAAOC,EAAjB,IAEIC,EAAS,KACTC,EAAM,KACNC,EAAU,KAEVC,EAAY,KAEZC,EAAmB,KACnBC,EAAa,KAKbC,EAAO,KAwPIC,cAlPb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaFI,uBAAyB,WACvBP,EAAKQ,SAAS,CAAEC,MAAOnB,OAAOoB,cAb9BV,EAAKW,MAAQ,CACXF,MAAOnB,OAAOoB,YAHJV,oFASZV,OAAOsB,iBAAiB,SAAUT,KAAKI,uEAGvCjB,OAAOuB,oBAAoB,SAAUV,KAAKI,yDASxBJ,KAAKQ,MAAfF,MADD,SAAAK,IAAA,OAAAA,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAGP,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,IAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,GAEQpC,OAAOsC,SAFf,CAAAH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAImCE,MAAM,sBAAuB,CACxDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPlB,cAIYb,EAJZM,EAAAQ,KAAAR,EAAAE,KAAA,EAUqBR,EAAee,OAVpC,cAUM1C,EAVNiC,EAAAQ,KAYMnC,EAAO,IAAIqC,IAAK7C,OAAOsC,UAZ7BH,EAAAE,KAAA,GAeYrC,OAAOsC,SAASQ,KAAK,uBAfjC,eAAAX,EAAAE,KAAA,GAgB2B7B,EAAKuC,IAAIC,cAhBpC,eAgBUlB,EAhBVK,EAAAQ,KAiBMvC,EAAU0B,EAAS,GAjBzBK,EAAAE,KAAA,GAmB8BrC,OAAOsC,SAASW,QAAQ,CAC9CC,OAAQ,gBApBhB,YAmBYnB,EAnBZI,EAAAQ,OAuBwBzC,EAAOiD,QAAQC,IAAQrB,GAAa7B,EAAOmD,QAAQD,GAvB3E,CAAAjB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyBkCE,MAAM,mBAAoB,CAClDC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBA5BpB,eAyBcV,EAzBdG,EAAAQ,KAAAR,EAAAE,KAAA,GA+BoBL,EAAYY,OA/BhC,WA+BQzC,EA/BRgC,EAAAQ,KAiCYZ,GAAa7B,EAAOiD,QAAQC,GAjCxC,CAAAjB,EAAAE,KAAA,gBAkCUhC,EAAYH,EAAOiD,QAAQG,OAC3B/C,EAAaL,EAAOiD,QAAQI,IACfrD,EAAOiD,QAAQK,QAC5BlD,EAAmBJ,EAAOiD,QAAQM,OArC5CtB,EAAAE,KAAA,GAsCqCqB,EAASlD,EAAML,EAAIwD,QAAQxD,IAAKD,EAAO0D,SAASD,SAtCrF,QAAAxB,EAAAQ,KAuC+BzC,EAAO0D,SAASD,QAvC/CxB,EAAAE,KAAA,oBAyCiBN,GAAa7B,EAAOmD,QAAQD,GAzC7C,CAAAjB,EAAAE,KAAA,gBA0CUhC,EAAYH,EAAOmD,QAAQC,OAC3B/C,EAAaL,EAAOmD,QAAQE,IACfrD,EAAOmD,QAAQG,QAC5BlD,EAAmBJ,EAAOmD,QAAQI,OA7C5CtB,EAAAE,KAAA,GA8CqCqB,EAASlD,EAAML,EAAIwD,QAAQxD,IAAKD,EAAO2D,SAASF,SA9CrF,QAAAxB,EAAAQ,KAgD+BzC,EAAO2D,SAASF,QAhD/C,eAoDY1B,EAAW6B,SAASC,eAAe,YAC9BC,MAAM7C,MAAQ,QArD/BgB,EAAAE,KAAA,GAsDmC4B,EAAc7D,GAtDjD,eAsDQ6B,EAASiC,UAtDjB/B,EAAAQ,KAAAR,EAAAE,KAAA,GAwD8B8B,EAAQ/D,EAASG,GAxD/C,QAAA4B,EAAAQ,KA2DQmB,SAASC,eAAe,0BAA0BG,UAAU,GACvCJ,SAASC,eAAe,wBAChCG,UAAY,GA7DjC/B,EAAAE,KAAA,iBAkEgBrC,OAAOoE,QAAQ,kBAlE/B,QAAAjC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkC,GAAAlC,EAAA,SAwEImC,QAAQC,IAAI,8BAAApC,EAAAkC,IAxEhB,yBAAAlC,EAAAqC,SAAA5C,EAAA,mBAHO6C,MAAA5D,KAAA6D,WAAA,SA+EQP,EA/ERQ,EAAAC,GAAA,OAAAC,EAAAJ,MAAA5D,KAAA6D,WAAA,SAAAG,IAAA,OAAAA,EAAAlE,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KA+EP,SAAAmD,EAAuB1E,EAASmD,GAAhC,IAAAwB,EAAAC,EAAAC,EAAA,OAAAvD,IAAAQ,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cACM0C,EAASxB,EAAM,IAAMnD,EAD3B8E,EAAA7C,KAAA,EAE0BE,MAAMwC,GAFhC,cAEMC,EAFNE,EAAAvC,KAAAuC,EAAA7C,KAAA,EAGiC2C,EAAYpC,OAH7C,cAGMqC,EAHNC,EAAAvC,KAAAuC,EAAAC,OAAA,SAKSF,GALT,wBAAAC,EAAAV,SAAAM,OA/EOL,MAAA5D,KAAA6D,WAAA,SAuFQT,EAvFRmB,GAAA,OAAAC,EAAAZ,MAAA5D,KAAA6D,WAAA,SAAAW,IAAA,OAAAA,EAAA1E,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAuFP,SAAA2D,EAA6BC,GAA7B,IAAAR,EAAAC,EAAAC,EAAAO,EAAAC,EAAA,OAAA/D,IAAAQ,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cACM0C,EAASzE,EAAiBqF,QAAQ,WAAYJ,GADpDG,EAAArD,KAAA,EAE0BE,MAAMwC,GAFhC,cAEMC,EAFNU,EAAA/C,KAAA+C,EAAArD,KAAA,EAGiC2C,EAAYpC,OAH7C,cAGMqC,EAHNS,EAAA/C,KAKM6C,EAAY3C,IAAK+C,MAAMC,QAAQZ,EAAmBa,QAClDL,EAAUM,OAAOP,GAAWQ,QAAQ,GAN1CN,EAAAP,OAAA,SAQS,KAAOM,EAAU,IAAMpF,GARhC,yBAAAqF,EAAAlB,SAAAc,OAvFOb,MAAA5D,KAAA6D,WAAA,SAkGQhB,EAlGRuC,EAAAC,EAAAC,GAAA,OAAAC,EAAA3B,MAAA5D,KAAA6D,WAAA,SAAA0B,IAAA,OAAAA,EAAAzF,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAkGP,SAAA0E,EAAwB7F,EAAM8F,EAAMC,GAApC,IAAAC,EAAAC,EAAAC,EAAA,OAAAhF,IAAAQ,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,cAAAsE,EAAAtE,KAAA,EAIsBE,MAAM+D,EAAM,CAC9B9D,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,sBAPd,cAIE+D,EAJFE,EAAAhE,KAAAgE,EAAAtE,KAAA,EAUwBoE,EAAY7D,OAVpC,cAUQ8D,EAVRC,EAAAhE,KAWE6D,EAAY,IAAIhG,EAAKuC,IAAI6D,SAASF,EAASH,GAX7CI,EAAAxB,OAAA,SAYSqB,GAZT,wBAAAG,EAAAnC,SAAA6B,OAlGO5B,MAAA5D,KAAA6D,WAAA,SAAAmC,IAAA,OAAAA,EAAAlG,OAAAc,EAAA,EAAAd,CAAAe,IAAAC,KAkHP,SAAAmF,IAAA,IAAAC,EAAAC,EAAAlB,EAAAmB,EAAAC,EAAAC,EAAAC,EAAA,OAAA1F,IAAAQ,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cAAAgF,EAAAjF,KAAA,EAEQ2E,EAAMjD,SAASC,eAAe,YAC9BiD,EAAMlD,SAASC,eAAe,WAC9B+B,EAASiB,EAAIO,MAAM3B,QAAQ,MAAO,IAElCsB,EAAOM,OAAOzB,EAAOH,QAAQ,IAAI,KAAM6B,MAAM,KAEjDlD,QAAQC,IAAI0C,GAGRC,EAAiB,6CAXzBG,EAAAhF,KAAA,EAagCqB,EAASlD,EAAM,uBAAwB0G,GAbvE,cAaQC,EAbRE,EAAA1E,KAAA0E,EAAAhF,KAAA,GAcgCqB,EAASlD,EAAM,oBAAqBwG,EAAIM,OAdxE,eAcQF,EAdRC,EAAA1E,KAAA0E,EAAAhF,KAAA,GAgB0B+E,EAAgBK,QAAQC,iBAAiBtH,EAAS8G,GAAgBlG,OAhB5F,WAiBmB,GAjBnBqG,EAAA1E,KAAA,CAAA0E,EAAAhF,KAAA,gBAAAgF,EAAAhF,KAAA,GAkBY+E,EAAgBK,QAAQE,kBAAkBT,GAAgB,GAAMpE,KAAK,CAAE8E,KAAMxH,IAlBzF,eAAAiH,EAAAhF,KAAA,GAoBU8E,EAAgBM,QAAQI,gBAAgBb,EAAIM,MAAOL,GAAMnE,KAAK,CAAE8E,KAAMxH,IApBhF,QAAAiH,EAAAhF,KAAA,iBAAAgF,EAAAjF,KAAA,GAAAiF,EAAAhD,GAAAgD,EAAA,SAyBI/C,QAAQC,IAAR8C,EAAAhD,IAzBJ,yBAAAgD,EAAA7C,SAAAsC,EAAA,mBAlHOrC,MAAA5D,KAAA6D,WAiJP,OACEoD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,+DACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,kBAAkBlE,MAAO,CAAEmE,WAAY,mBAChDL,EAAAC,EAAAC,cAAA,KAAGE,MAAM,oBAAoBlE,MAAO,CAAEoE,WAAY,MAAOC,SAAU,QAAUC,KAAK,MAAQR,EAAAC,EAAAC,cAAA,OAAKO,IAAI,WAAWpH,MAAM,OACpH2G,EAAAC,EAAAC,cAAA,UAAQE,MAAM,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBACtKf,EAAAC,EAAAC,cAAA,QAAME,MAAM,yBAEdJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,2BAA2BY,GAAG,kBACvChB,EAAAC,EAAAC,cAAA,MAAIE,MAAM,uCAAuClE,MAAO,CAAEqE,SAAU,SAClEP,EAAAC,EAAAC,cAAA,MAAIE,MAAM,YACRJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,kBAAkBa,eAAa,OAAOT,KAAK,KAApD,cAEFR,EAAAC,EAAAC,cAAA,MAAIE,MAAM,YACRJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,WAAWI,KAAK,KAAzB,iBAEFR,EAAAC,EAAAC,cAAA,MAAIE,MAAM,YACRJ,EAAAC,EAAAC,cAAA,KAAGE,MAAM,YAAT,mBAKRJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,+BACTJ,EAAAC,EAAAC,cAAA,OAAKc,GAAG,UAAUb,UAAU,kBAC5BH,EAAAC,EAAAC,cAAA,OAAKc,GAAG,aAAaE,QA1KxB,kBAAAxH,EAAAiD,MAAA5D,KAAA6D,YA0KgDuD,UAAU,qBAAqBO,KAAK,SAASxE,MAAO,CAAEmE,WAAY,mBAA/G,0BAONL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMhE,MAAO,CAAEmE,WAAY,mBACzBL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACfH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qDAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOc,GAAG,UAAUG,KAAK,UAAUT,KAAK,OAAOU,YAAY,iBAE7DpB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YAAUc,GAAG,WAAWG,KAAK,WAAWE,KAAK,IAAIC,KAAK,SAExDtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,SAASN,MAAM,oBAAoBY,GAAG,aAAaE,QApMzE,kBAAAnC,EAAApC,MAAA5D,KAAA6D,aAoMS,iBAUZoD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKE,MAAM,aACTJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,mBAEbJ,EAAAC,EAAAC,cAAA,OAAKE,MAAM,iBACTJ,EAAAC,EAAAC,cAAA,kFAxOMqB,aCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCADY,IAASC,WAAWtG,SAASC,eAAe,SACpDsG,OACHvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,WAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,QAOJjB","file":"static/js/main.37b763ed.chunk.js","sourcesContent":["import './App.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react'; \n\nimport 'sf-font'; \nimport Web3 from 'web3'; \n\nconst $ = window.$; \n\nvar CONFIG = null;\nvar ABI = null;\nvar account = null; \n\nvar defSymbol = null; \n\nvar walletBalanceAPI = null;\nvar scannerAPI = null; \n\nvar stakingnftcontract = null; \nvar stakingnft_address = null; \n\nvar web3 = null; \n \nvar resultAPICall = null;\nvar balanceAPI = null;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: window.innerWidth,\n    };\n\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n  handleWindowSizeChange = () => {\n    this.setState({ width: window.innerWidth });\n  };\n \n  \n \n  render() {\n    const { width } = this.state; \n \n    async function connectwallet() {\n      try {\n        if (window.ethereum) {\n\n          const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n          });\n          CONFIG = await configResponse.json();\n\n          web3 = new Web3(window.ethereum);\n\n\n          await window.ethereum.send('eth_requestAccounts');\n          var accounts = await web3.eth.getAccounts();\n          account = accounts[0];\n\n          const networkId = await window.ethereum.request({\n            method: \"net_version\",\n          });\n\n          if ((networkId == CONFIG.MAINNET.ID) || (networkId == CONFIG.TESTNET.ID)) {\n\n            const abiResponse = await fetch(\"/config/abi.json\", {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n            });\n            ABI = await abiResponse.json(); \n\n            if (networkId == CONFIG.MAINNET.ID) {\n              defSymbol = CONFIG.MAINNET.SYMBOL; \n              scannerAPI = CONFIG.MAINNET.API;\n              balanceAPI = CONFIG.MAINNET.BALANCE;\n              walletBalanceAPI = CONFIG.MAINNET.WALLET; \n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.MAINDAPP.STAKING); \n              stakingnft_address = CONFIG.MAINDAPP.STAKING;  \n            }\n            else if (networkId == CONFIG.TESTNET.ID) {  \n              defSymbol = CONFIG.TESTNET.SYMBOL; \n              scannerAPI = CONFIG.TESTNET.API;\n              balanceAPI = CONFIG.TESTNET.BALANCE;\n              walletBalanceAPI = CONFIG.TESTNET.WALLET; \n              stakingnftcontract = await ABIFetch(web3, ABI.STAKING.ABI, CONFIG.TESTDAPP.STAKING); \n\n              stakingnft_address = CONFIG.TESTDAPP.STAKING; \n            }\n \n\n            var sWallBal = document.getElementById(\"wallBal\");\n            sWallBal.style.width = \"100px\";\n            sWallBal.innerHTML = await WalletBalance(account);\n\n            resultAPICall = await APICall(account, scannerAPI); \n \n\n            document.getElementById('unstaked-nft-container').innerHTML=\"\";\n            const DivContainer = document.getElementById('staked-nft-container');\n            DivContainer.innerHTML = \"\"; \n \n          }\n\n          else {\n            var z = window.confirm(\"Wrong network!\");\n          }\n\n        }\n      }\n      catch (ex) {\n        console.log('connectwallet - SeeError - ' + ex); \n      }\n    }\n  \n    async function APICall(account, API) {\n      var theURL = API + \"=\" + account;\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      return jsonParsedContents;\n    } \n\n    async function WalletBalance(_account) {\n      var theURL = walletBalanceAPI.replace('@ACCOUNT', _account);\n      var apiResponse = await fetch(theURL);\n      var jsonParsedContents = await apiResponse.json();\n\n      var earnedrwd = Web3.utils.fromWei(jsonParsedContents.result);\n      var rewards = Number(earnedrwd).toFixed(3);\n\n      return '  ' + rewards + ' ' + defSymbol;\n    }\n  \n    async function ABIFetch(web3, _abi, _address) {\n      var _contract;\n      var ABIResponse;\n\n      ABIResponse = await fetch(_abi, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const ABIJSON = await ABIResponse.json();\n      _contract = new web3.eth.Contract(ABIJSON, _address);\n      return _contract;\n    }\n \n\n    async function Airdrop(){\n      try{\n        let txt = document.getElementById('w3review');\n        let nft = document.getElementById('nftAddy');\n        let result = txt.value.replace(/\\n/g, '');  //replace(regex, \"\");\n\n        var addy = String(result.replace(\" \",\"\") ).split(\",\");\n\n        console.log(addy);\n\n        //TestNet >> var airdropAddress = \"0x7E59DA3aa88100a9Ecb17B4A1380196D900F3570\";\n        var airdropAddress = \"0x7876124572B9316CDb86E043aE7B99E73DC97E0d\";\n\n        var airdropContract = await ABIFetch(web3, \"/abi/nftAirdrop.json\", airdropAddress);\n        var jeepneyContract = await ABIFetch(web3, \"/abi/jeepney.json\", nft.value);        \n\n        var isApprove = await jeepneyContract.methods.isApprovedForAll(account, airdropAddress).call();\n        if (isApprove==false){\n          await jeepneyContract.methods.setApprovalForAll(airdropAddress, true).send({ from: account });\n        }\n        await airdropContract.methods.InitiateAirdrop(nft.value, addy).send({ from: account });\n          \n\n      }\n      catch(ex){\n        console.log(ex);\n      }\n\n    }\n\n\n    return (\n      <div className=\"App nftapp\">\n        <nav class=\"navbar navbarfont navbar-expand-md navbar-dark bg-dark mb-4\">\n          <div class=\"container-fluid\" style={{ fontFamily: \"SF Pro Display\" }}>\n            <a class=\"navbar-brand px-5\" style={{ fontWeight: \"800\", fontSize: '15px' }} href=\"#\"></a><img src=\"logo.png\" width=\"7%\" />\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <ul class=\"navbar-nav me-auto mb-2 px-3 mb-md-0\" style={{ fontSize: \"15px\" }}>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Dashboard</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"#\">Market Place</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\">Bridge NFTs</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className='px-5'>\n            <div class=\"d-flex flex-row accountInfo\">\n              <div id=\"wallBal\" className=\"walletBalance\" />\n              <div id=\"btnConnect\" onClick={connectwallet} className=\"connectbutton ml-2\" type=\"button\" style={{ fontFamily: \"SF Pro Display\" }}>\n                Connect Your Wallet\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <div className='container container-style'>\n          <div className='col'>\n\n            <div>\n              <form style={{ fontFamily: \"SF Pro Display\" }} >\n                <table className='nftstaker'>\n                  <tr>\n                    <h5>Airdrop Functionality</h5>\n                  </tr>\n                  <tr>\n                    <h6>Maximum of 25 Transfer per Transaction</h6>\n                  </tr>\n                  <tr>\n                    <input id=\"nftAddy\" name=\"nftAddy\" type=\"text\" placeholder=\"NFT Address\"></input>\n                  </tr>\n                  <tr>\n                    <textarea id=\"w3review\" name=\"w3review\" rows=\"4\" cols=\"100\"></textarea>\n                  </tr>\n                  <tr>\n                    <button type=\"button\" class=\"btn btn-secondary\" id=\"btnAirdrop\" onClick={Airdrop}>Airdrop</button>\n                  </tr>\n                </table>\n              </form>\n            </div>\n\n          </div>\n        </div>\n \n\n        <footer>\n          <div class=\"container\">\n            <div class=\"row secondary\"></div>\n          </div>\n          <div class=\"row copyright\">\n            <p>Copyright &copy; 2022 RushDapp SmartBCH | All Rights Reserved\n            </p>\n          </div>\n\n        </footer>\n      </div>\n    ); \n\n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}